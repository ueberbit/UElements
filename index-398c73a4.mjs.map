{"version":3,"file":"index-398c73a4.mjs","sources":["../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js"],"sourcesContent":["export function dedent(templ) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n    strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n    var indentLengths = strings.reduce(function (arr, str) {\n        var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n        if (matches) {\n            return arr.concat(matches.map(function (match) { var _a, _b; return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0; }));\n        }\n        return arr;\n    }, []);\n    if (indentLengths.length) {\n        var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n        strings = strings.map(function (str) { return str.replace(pattern_1, '\\n'); });\n    }\n    strings[0] = strings[0].replace(/^\\r?\\n/, '');\n    var string = strings[0];\n    values.forEach(function (value, i) {\n        var endentations = string.match(/(?:^|\\n)( *)$/);\n        var endentation = endentations ? endentations[1] : '';\n        var indentedValue = value;\n        if (typeof value === 'string' && value.includes('\\n')) {\n            indentedValue = String(value)\n                .split('\\n')\n                .map(function (str, i) {\n                return i === 0 ? str : \"\" + endentation + str;\n            })\n                .join('\\n');\n        }\n        string += indentedValue + strings[i + 1];\n    });\n    return string;\n}\nexport default dedent;\n//# sourceMappingURL=index.js.map"],"names":["dedent","templ","values","_i","strings","indentLengths","arr","str","matches","match","_a","_b","pattern_1","string","value","i","endentations","endentation","indentedValue"],"mappings":"AAAO,SAASA,EAAOC,GAAO;AAE1B,WADIC,IAAS,CAAA,GACJC,IAAK,GAAGA,IAAK,UAAU,QAAQA;AACpC,IAAAD,EAAOC,IAAK,CAAC,IAAI,UAAUA,CAAE;AAEjC,MAAIC,IAAU,MAAM,KAAK,OAAOH,KAAU,WAAW,CAACA,CAAK,IAAIA,CAAK;AACpE,EAAAG,EAAQA,EAAQ,SAAS,CAAC,IAAIA,EAAQA,EAAQ,SAAS,CAAC,EAAE,QAAQ,kBAAkB,EAAE;AACtF,MAAIC,IAAgBD,EAAQ,OAAO,SAAUE,GAAKC,GAAK;AACnD,QAAIC,IAAUD,EAAI,MAAM,qBAAqB;AAC7C,WAAIC,IACOF,EAAI,OAAOE,EAAQ,IAAI,SAAUC,GAAO;AAAE,UAAIC,GAAIC;AAAI,cAAQA,KAAMD,IAAKD,EAAM,MAAM,QAAQ,OAAO,QAAQC,MAAO,SAAS,SAASA,EAAG,YAAY,QAAQC,MAAO,SAASA,IAAK;AAAA,IAAI,CAAA,CAAC,IAE1LL;AAAA,EACV,GAAE,CAAE,CAAA;AACL,MAAID,EAAc,QAAQ;AACtB,QAAIO,IAAY,IAAI,OAAO;AAAA,SAAa,KAAK,IAAI,MAAM,MAAMP,CAAa,IAAI,KAAK,GAAG;AACtF,IAAAD,IAAUA,EAAQ,IAAI,SAAUG,GAAK;AAAE,aAAOA,EAAI,QAAQK,GAAW;AAAA,CAAI;AAAA,IAAI,CAAA;AAAA,EAChF;AACD,EAAAR,EAAQ,CAAC,IAAIA,EAAQ,CAAC,EAAE,QAAQ,UAAU,EAAE;AAC5C,MAAIS,IAAST,EAAQ,CAAC;AACtB,SAAAF,EAAO,QAAQ,SAAUY,GAAOC,GAAG;AAC/B,QAAIC,IAAeH,EAAO,MAAM,eAAe,GAC3CI,IAAcD,IAAeA,EAAa,CAAC,IAAI,IAC/CE,IAAgBJ;AACpB,IAAI,OAAOA,KAAU,YAAYA,EAAM,SAAS;AAAA,CAAI,MAChDI,IAAgB,OAAOJ,CAAK,EACvB,MAAM;AAAA,CAAI,EACV,IAAI,SAAUP,GAAKQ,GAAG;AACvB,aAAOA,MAAM,IAAIR,IAAM,KAAKU,IAAcV;AAAA,IAC1D,CAAa,EACI,KAAK;AAAA,CAAI,IAElBM,KAAUK,IAAgBd,EAAQW,IAAI,CAAC;AAAA,EAC/C,CAAK,GACMF;AACX;","x_google_ignoreList":[0]}